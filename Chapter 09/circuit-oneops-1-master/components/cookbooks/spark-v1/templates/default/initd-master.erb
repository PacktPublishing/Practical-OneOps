<% 
  # initd-master.erb
  #
  # This is the service init script used to run a Spark master as a
  # service on this node.
 %>
#!/bin/bash
# init script for Spark master
# chkconfig: 2345 90 10
# description: Spark master

source /etc/rc.d/init.d/functions

SPARK_HOME=<%= @spark_dir %>
SPARK_MASTER_LOG=<%= @spark_tmp_dir %>/logs/spark_master.out
SPARK_USER="spark"
SPARK_MASTER_PID=/tmp/spark-spark-org.apache.spark.deploy.master.Master-1.pid
SPARK_MASTER_URI=`cat $SPARK_HOME/conf/spark.master`

prog=spark

RETVAL=0

start() {
  if [ -f $SPARK_MASTER_PID ] && checkpid `cat $SPARK_MASTER_PID`; then
    echo "Spark master is already running."
  else
    # Start a Spark master
    echo -n $"Starting Spark master: "
    su - $SPARK_USER -c "$SPARK_HOME/sbin/start-master.sh >> $SPARK_MASTER_LOG 2>&1"

    RETVAL=$?
    
    echo_success
    echo
  fi
  
  return $RETVAL
}

stop() {
  # check if the process is already stopped by seeing if the pid file exists.
  if [ ! -f $SPARK_MASTER_PID ]; then
    echo "Spark master is already stopped."
    
    return 0
  fi
  
  echo -n $"Stopping Spark master: "
  sudo -u $SPARK_USER $SPARK_HOME/sbin/stop-master.sh 2>&1 >/dev/null
  if [ "$?" == "0" ]; then
    RETVAL=0
    echo_success
  else
    RETVAL=1
    echo_failure
  fi
  echo
  
  [ $RETVAL = 0 ]
}

status_fn() {
  if [ -f $SPARK_MASTER_PID ] && checkpid `cat $SPARK_MASTER_PID`; then
    echo "Spark master is running."
    exit 0
  else
    echo "Spark master is stopped."
    exit 1
  fi
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  status)
    status_fn
    ;;
  restart)
    stop
    sleep 5
    start
    ;;
  *)
    echo $"Usage: $prog {start|stop|restart|status}"
    RETVAL=3
esac

exit $RETVAL
