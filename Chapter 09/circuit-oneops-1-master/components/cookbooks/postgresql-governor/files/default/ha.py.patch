--- helpers/ha.py	2016-06-05 10:22:13.000000000 -0700
+++ ha.py	2016-06-05 02:51:30.000000000 -0700
@@ -1,3 +1,5 @@
+import yaml
+from helpers.postgresql import Postgresql
 import sys, time, re, urllib2, json, psycopg2
 import logging
 from base64 import b64decode
@@ -17,6 +19,10 @@
     def __init__(self, state_handler, etcd):
         self.state_handler = state_handler
         self.etcd = etcd
+        f = open(sys.argv[1], "r")
+        config = yaml.load(f.read())
+        f.close()
+        self.name = Postgresql(config["postgresql"]).name
 
     def acquire_lock(self):
         return self.etcd.attempt_to_acquire_leader(self.state_handler.name)
@@ -38,11 +44,23 @@
 
     def run_cycle(self):
         try:
+            # check if the current node is from primary cloud
+            from_primary_cloud = True
+            try:
+               response = self.etcd.get_client_path("/primary_cloud/%s" % self.name)
+               if response["node"]["value"] == self.name:
+                  from_primary_cloud = True
+               else:
+                  from_primary_cloud = False
+                  logger.error("value in etcd is: %s; but the postgresql.name is: %s" % (response["node"]["value"], self.name))
+            except (urllib2.URLError):
+               logger.info("did not find the compute name under /service/postgres/primary_cloud/. This compute should be from secondary cloud")
+               from_primary_cloud = False
             if self.state_handler.is_healthy():
                 if self.is_unlocked():
                     logging.info("Leader is unlocked - starting election")
                     if self.state_handler.is_healthiest_node(self.etcd):
-                        if self.acquire_lock():
+                        if from_primary_cloud == True and self.acquire_lock():
                             if not self.state_handler.is_leader():
                                 self.state_handler.promote()
                                 return "promoted self to leader by acquiring session lock"
@@ -67,7 +85,7 @@
                             return "following a different leader because i am not the healthiest node"
 
                 else:
-                    if self.has_lock():
+                    if from_primary_cloud == True and self.has_lock():
                         self.update_lock()
 
                         if not self.state_handler.is_leader():
