#!/usr/bin/env ruby
#
# gets topic metrics from builtin xml apis
#

#sslenabled  port path topicname logpath authenabled adminusername adminpassword

sslenable = ARGV[0]
port = ARGV[1]
path = ARGV[2]
topic_name = ARGV[3]
logdir = ARGV[4]
authenabled = ARGV[5]
adminusername = ARGV[6]
adminpassword = ARGV[7]

# check for secondary or standby
adminstatus = `grep ONEOPS_CLOUD_ADMINSTATUS /etc/profile.d/oneops.sh`.split("=").last.chomp
if adminstatus == "secondary"
  puts "standby|topic_pending_count=0 topic_consumer_count=0 topic_enqueues=0 topic_dequeues=0"
  exit 0
else
  last_log_line = `tail -1 #{logdir}/activemq.log`
  if last_log_line =~ /Attempting to acquire the exclusive lock/
    puts "standby|topic_pending_count=0 topic_consumer_count=0 topic_enqueues=0 topic_dequeues=0"
    exit 0
  end
end


require 'net/http'
require 'rubygems'
require 'xmlsimple'

url =''
ignore_cert = ''
uri = ''

protocol = 'http'

if "#{sslenable}" == 'true'
  ignore_cert = ' -k '
  protocol = 'https'
end

if "#{authenabled}" == 'false'
  url = "#{protocol}://localhost:#{port}#{path} #{ignore_cert}"
else
  url = "#{protocol}://localhost:#{port}#{path}  -u #{adminusername}:#{adminpassword} #{ignore_cert}"
end

topics = XmlSimple.xml_in(`curl -s #{url}`,{ 'KeyAttr' => 'name', 'ForceArray' => false })

topic_pending_count = 0
topic_enqueue_count = 0
topic_dequeue_count = 0
topic_consumer_count = 0

real_topics = topics["topic"];
topic=''
if real_topics != nil
        real_topics.keys.each do |key|
           if key == "#{topic_name}"
              topic = real_topics[key]
           elsif key == "name"
               topic = real_topics
           end
end
           topic_pending_count += (topic["stats"]["size"]).to_i
           topic_consumer_count += (topic["stats"]["consumerCount"]).to_i
           topic_enqueue_count += (topic["stats"]["enqueueCount"]).to_i
           topic_dequeue_count += (topic["stats"]["dequeueCount"]).to_i
end
perf =  "topic_pending_count=#{topic_pending_count} "
perf +=  "topic_consumer_count=#{topic_consumer_count} "
perf += "topic_enqueues=#{topic_enqueue_count} "
perf += "topic_dequeues=#{topic_dequeue_count} "

puts "primary|"+ perf