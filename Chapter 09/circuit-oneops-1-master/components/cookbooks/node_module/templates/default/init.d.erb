#!/bin/bash
# description: Node Start Stop Restart
# processname: nodejs
# chkconfig: 234 20 80

. /etc/rc.d/init.d/functions

##Source the environment variables from oneOps

if [ -f /etc/profile.d/oneops.sh ];then
  source /etc/profile.d/oneops.sh
fi


USER="<%=node[:node_module][:as_user]%>"


SCRIPT_OPTIONS="<%=node[:node_module][:options]%>"
SCRIPT_LOCATION="<%=node[:node_module][:script_location]%>"
LOG_FILE="<%=node[:node_module][:log_file]%>"
SERVER="$SCRIPT_LOCATION $SCRIPT_OPTIONS"

# /<%=node[:node_module][:name]%> for relative urls within itself
SERVER_ROOT="<%=node[:node_module][:server_root]%>/<%=node[:node_module][:name]%>"

LOCK_FILE="/var/lock/subsys/node-server"

DAEMON="<%=node[:node_module][:node]%>"
DAEMONOPTS="$SCRIPT_LOCATION $SCRIPT_OPTIONS"
NAME="<%=node[:node_module][:name]%>"
DESC="${SCRIPT_LOCATION} "
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME

case "$1" in
start)
  printf "%-50s" "Starting $DESC..."
    PID=`runuser -c "cd $SERVER_ROOT; $DAEMON $DAEMONOPTS" - $USER  >> $LOG_FILE 2>&1 & echo $!`
  echo "Saving PID" $PID " to " $PIDFILE
    if [ -z $PID ]; then
        printf "%s\n" "Fail"
    else
        echo $PID > $PIDFILE
        printf "%s\n" "Ok"
    fi
;;
status)
        printf "%-50s" "Checking $DESC..."
        if [ -f $PIDFILE ]; then
            PID=`cat $PIDFILE`
            if [ -z "`ps axf | grep ${PID} | grep -v grep`" ]; then
                printf "%s\n" "Process dead but pidfile exists"
                exit 1
            else
                echo "Running"
            fi
        else
            printf "%s\n" "Service not running"
            exit 1
        fi
;;
stop)
    printf "%-50s" "Stopping $DESC"
    PID=`cat $PIDFILE`
  PPLIST=$PID
  CHILD_LIST=`pgrep -P $PPLIST -d,`
  while [ ! -z "$CHILD_LIST" ]
  do
     PPLIST="$PPLIST,$CHILD_LIST"
     CHILD_LIST=`pgrep -P $CHILD_LIST -d,`
   done

    SIGNAL="TERM"
  #do substring from comma to space
  kill  -$SIGNAL ${PPLIST//,/ }
       if [ -f $PIDFILE ]; then
            printf "%s\n" "Ok"
            rm -f $PIDFILE
        else
       printf "%s\n" "pidfile not found"
        fi
;;

restart)
    $0 stop
    $0 start
;;

*)
        echo "Usage: $0 {status|start|stop|restart}"
        exit 1
esac
